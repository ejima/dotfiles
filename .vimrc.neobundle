set nocompatible               " be iMproved
filetype off

if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim
  call neobundle#begin(expand('~/.vim/bundle/'))
  NeoBundleFetch 'Shougo/neobundle.vim'

  " originalrepos on github
  NeoBundle 'Shougo/neobundle.vim'
  NeoBundle 'Shougo/vimproc', {
    \ 'build' : {
      \ 'windows' : 'make -f make_mingw32.mak',
      \ 'cygwin' : 'make -f make_cygwin.mak',
      \ 'mac' : 'make -f make_mac.mak',
      \ 'unix' : 'make -f make_unix.mak',
    \ },
  \ }
  NeoBundle 'Shougo/vimshell'
  NeoBundle 'Shougo/unite.vim'
  NeoBundle 'Shougo/vimfiler.vim'
  NeoBundle 'Shougo/neocomplcache'
  NeoBundle 'Shougo/neosnippet-snippets'
  "NeoBundle 'szw/vim-tags'
  NeoBundle 'vim-ruby/vim-ruby'
  NeoBundle 'rking/ag.vim'
  NeoBundle 'gist:mattn/4975267', { 'name': 'dash.vim', 'script_type': 'plugin' }
  "NeoBundle 'scrooloose/syntastic'
  NeoBundle 'bronson/vim-trailing-whitespace'
  NeoBundle 'kchmck/vim-coffee-script'
  NeoBundle 'chase/vim-ansible-yaml'
  NeoBundle 'rust-lang/rust.vim'
  NeoBundle 'elixir-lang/vim-elixir'
  NeoBundle 'kana/vim-operator-user'
  NeoBundle 'hashivim/vim-terraform'
  NeoBundle 'stephpy/vim-yaml'
  NeoBundleLazy 'rhysd/vim-clang-format', {
                \ 'autoload' : {'filetypes' : ['c', 'cpp', 'objc']}
                \ }

  call neobundle#end()
endif

"
" Brief help
" :NeoBundleList          - list configured bundles
" :NeoBundleInstall(!)    - install(update) bundles
" :NeoBundleClean(!)      - confirm(or auto-approve) removal of unused bundles

" Installation check.
if neobundle#exists_not_installed_bundles()
  echomsg 'Not installed bundles : ' .
        \ string(neobundle#get_not_installed_bundle_names())
  echomsg 'Please execute ":NeoBundleInstall" command.'
  "finish
endif

" VimFiler
"autocmd VimEnter * VimFiler -split -simple -winwidth=30 -no-quit
let g:vimfiler_as_default_explorer = 1

" syntastic
let g:syntastic_mode_map = { 'mode': 'passive',
            \ 'active_filetypes': ['ruby'] }
let g:syntastic_ruby_checkers = ['rubocop']

filetype plugin indent on     " required!

" vim-clang-format
map ,x <Plug>(operator-clang-format)

" vim-tags
"let g:vim_tags_project_tags_command = "/usr/local/bin/ctags -R {OPTIONS} {DIRECTORY} 2>/dev/null"
"let g:vim_tags_gems_tags_command = "/usr/local/bin/ctags -R {OPTIONS} `bundle show --paths` 2>/dev/null"
